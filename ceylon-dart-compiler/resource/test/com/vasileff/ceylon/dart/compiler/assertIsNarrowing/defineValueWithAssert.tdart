import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

void $package$assertions() {
    $dart$core.Object obj = $ceylon$language.$ceylonFloat(1.0);
    $dart$core.double f;
    {
        $dart$core.Object f$0 = obj;
        if (!(f$0 is $ceylon$language.Float)) {
            throw new $ceylon$language.AssertionError("Violated: is Float f = obj");
        }
        f = $ceylon$language.$dartDouble(f$0 as $ceylon$language.Float);
    }
    $dart$core.double g = f;
}

void assertions() => $package$assertions();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}