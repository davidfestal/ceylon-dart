import "dart:core" as $dart$core;
import "package:ceylon/language/language.dart" as $ceylon$language;

class A$B$C$asdf$D {
    A$B$C $outer$default$A$B$C;
    $dart$core.String $capture$A$A$B$A$B$C$asdf$cap1;
    A$B$C$asdf$D([A$B$C this.$outer$default$A$B$C, $dart$core.String this.$capture$A$A$B$A$B$C$asdf$cap1, $dart$core.String _$x]) {
        this._$x = _$x;
    }
    $dart$core.String _$x;
    $dart$core.String get useit => $capture$A$A$B$A$B$C$asdf$cap1;
}
class A$B$C {
    A$B $outer$default$A$B;
    A$B$C([A$B this.$outer$default$A$B]) {
        _$newB1 = new $ceylon$language.dart$Callable(([$dart$core.Object $r$]) => new $ceylon$language.dart$Callable(() => new A$B$C($r$)));
        _$newB2 = new $ceylon$language.dart$Callable(([$dart$core.Object $r$]) => new $ceylon$language.dart$Callable(() => new A$B$C($r$)));
        _$newB3 = new $ceylon$language.dart$Callable(() => new A$B$C(this.$outer$default$A$B));
    }
    $ceylon$language.Callable _$newB1;
    $ceylon$language.Callable _$newB2;
    $ceylon$language.Callable _$newB3;
    void asdf() {
        $dart$core.String cap1 = "";
        $ceylon$language.Callable newd = new $ceylon$language.dart$Callable(([$ceylon$language.String _$x]) => new A$B$C$asdf$D(this, cap1, $ceylon$language.String.nativeValue(_$x)));
    }
}
class A$B {
    A $outer$default$A;
    A$B([A this.$outer$default$A]) {
        _$newB1 = new $ceylon$language.dart$Callable(([$dart$core.Object $r$]) => new $ceylon$language.dart$Callable(() => new A$B($r$)));
        _$newB2 = new $ceylon$language.dart$Callable(() => new A$B(this.$outer$default$A));
    }
    $ceylon$language.Callable _$newB1;
    $ceylon$language.Callable _$newB2;
}
class A {
    A() {}
}