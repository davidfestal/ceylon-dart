import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class C$_foo$D implements $ceylon$language.dart$$Basic {
  C $outer$default$C;
  $dart$core.String $capture$C$_foo$captureMe;
  C$_foo$D([C $outer$default$C, $dart$core.String $capture$C$_foo$captureMe, $dart$core.String s]) {
    this.$outer$default$C = $outer$default$C;
    this.$capture$C$_foo$captureMe = $capture$C$_foo$captureMe;
    this._s = s;
  }
  $dart$core.String _s;
  $dart$core.String get _useCM => $capture$C$_foo$captureMe;
}
class C implements $ceylon$language.dart$$Basic {
  C() {}
  void _foo() {
    $dart$core.String captureMe = "";
    $ceylon$language.Callable newD1 = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "C.foo.D"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ([$ceylon$language.String $0]) => new C$_foo$D(this, captureMe, $ceylon$language.$dartString($0)));
    $ceylon$language.Callable newD2 = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "C.foo.D"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ([$ceylon$language.String s]) => new C$_foo$D(this, captureMe, $ceylon$language.$dartString(s)));
  }
}
$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Boolean"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ($ceylon$language.String toplevel) {
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"C":const{"mt":"c","nm":"C","super":const{"nm":"Basic","pk":"\$","md":"\$"}}}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.dart.runtime.model::Module"), [$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}