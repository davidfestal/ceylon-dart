import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class run$C implements $ceylon$language.dart$$Basic {
    run$C() {
        foo$c = new $ceylon$language.dart$Callable(() => $ceylon$language.$ceylonString("hello C"));
    }
    $ceylon$language.Callable foo$c;
    $dart$core.String foo() {
        return $ceylon$language.$dartString(foo$c.f());
    }
}
class run$D  extends run$C {
    run$D() {
        _foo$c = new $ceylon$language.dart$Callable(() => $ceylon$language.$ceylonString("hello D"));
    }
    $ceylon$language.Callable _foo$c;
    $dart$core.String _foo() {
        return $ceylon$language.$dartString(_foo$c.f());
    }
}
void $package$run() {
    if (!((new run$C()).foo() == "hello C")) {
        throw new $ceylon$language.AssertionError("Violated: C().foo() == \"hello C\"");
    }
}

void run() => $package$run();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}