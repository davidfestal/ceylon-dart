import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class run$C implements $ceylon$language.dart$$Basic {
    $dart$core.int $capture$run$a;
    $dart$core.int $capture$run$b;
    void _$init$run$run$C([$dart$core.int $bitmap, $dart$core.int $capture$run$a, $dart$core.int $capture$run$b]) {
        if (0 != ($bitmap & 2)) {
            this.$capture$run$a = $capture$run$a;
            this.$capture$run$b = $capture$run$b;
            if (!($capture$run$a == 1)) {
                throw new $ceylon$language.AssertionError("Violated: a == 1");
            }
        }
        if (0 != ($bitmap & 1)) {
            this.$capture$run$a = $capture$run$a;
            this.$capture$run$b = $capture$run$b;
            if (!($capture$run$b == 2)) {
                throw new $ceylon$language.AssertionError("Violated: b == 2");
            }
        }
    }
    run$C.newa([$dart$core.int $capture$run$a, $dart$core.int $capture$run$b]) : this.newa$d(2, $capture$run$a, $capture$run$b);
    run$C.newa$d([$dart$core.int $bitmap, $dart$core.int $capture$run$a, $dart$core.int $capture$run$b]) {
        _$init$run$run$C($bitmap | 2, $capture$run$a, $capture$run$b);
    }
    run$C.newb([$dart$core.int $capture$run$a, $dart$core.int $capture$run$b]) : this.newb$d(1, $capture$run$a, $capture$run$b);
    run$C.newb$d([$dart$core.int $bitmap, $dart$core.int $capture$run$a, $dart$core.int $capture$run$b]) {
        _$init$run$run$C($bitmap | 1, $capture$run$a, $capture$run$b);
    }
}
void $package$run() {
    $dart$core.int a = 1;
    $dart$core.int b = 2;
    new run$C.newa(a, b);
    new run$C.newb(a, b);
}

void run() => $package$run();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}