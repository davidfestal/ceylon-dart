import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

abstract class run$I {
  void callFun();
  static void $callFun([final run$I $this]) {
    $this.$capture$run$fun();
  }
  $dart$core.Function $capture$run$fun;
}
class run$C implements $ceylon$language.dart$$Basic, run$I {
  $dart$core.Function $capture$run$fun;
  run$C([$dart$core.Function $capture$run$fun]) {
    this.$capture$run$fun = $capture$run$fun;
  }
  void callFun() {
    $capture$run$fun();
  }
}
class run$D implements $ceylon$language.dart$$Basic, run$I {
  $dart$core.Function $capture$run$fun;
  void _$init$run$run$D([$dart$core.int $bitmap, $dart$core.Function $capture$run$fun]) {
    if (0 != ($bitmap & 2)) {
      this.$capture$run$fun = $capture$run$fun;
    }
    if (0 != ($bitmap & 1)) {
      this.$capture$run$fun = $capture$run$fun;
    }
  }
  run$D([$dart$core.Function $capture$run$fun]) : this.$d(2, $capture$run$fun);
  run$D.$d([$dart$core.int $bitmap, $dart$core.Function $capture$run$fun]) {
    _$init$run$run$D($bitmap | 2, $capture$run$fun);
  }
  run$D.create([$dart$core.Function $capture$run$fun]) : this.create$d(1, $capture$run$fun);
  run$D.create$d([$dart$core.int $bitmap, $dart$core.Function $capture$run$fun]) {
    _$init$run$run$D($bitmap | 1, $capture$run$fun);
  }
  void callFun() {
    $capture$run$fun();
  }
}
void $package$run() {
  void fun() {
    $ceylon$language.print($ceylon$language.$ceylonString("hello"));
  }

  (new run$C(fun)).callFun();
  (new run$D(fun)).callFun();
  (new run$D.create(fun)).callFun();
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
  if (_$module == null) {
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}