import "dart:core" as $dart$core;
import "package:ceylon/language/language.dart" as $ceylon$language;

abstract class run$I {
    void callFun();
    static void $callFun([final run$I $this]) => $this.$capture$run$fun();
    $dart$core.Function $capture$run$fun;
}
class run$C implements run$I {
    $dart$core.Function $capture$run$fun;
    run$C([$dart$core.Function $capture$run$fun]) {
        this.$capture$run$fun = $capture$run$fun;
    }
    void callFun() => $capture$run$fun();
}
class run$D implements run$I {
    $dart$core.Function $capture$run$fun;
    run$D([$dart$core.Function $capture$run$fun]) {
        this.$capture$run$fun = $capture$run$fun;
    }
    run$D.create([$dart$core.Function $capture$run$fun]) {
        this.$capture$run$fun = $capture$run$fun;
    }
    void callFun() => $capture$run$fun();
}
void $package$run() {
    void fun() {
        $ceylon$language.print($ceylon$language.String.instance("hello"));
    }

    (new run$C(fun)).callFun();
    (new run$D(fun)).callFun();
    (new run$D.create(fun)).callFun();
}

void run() => $package$run();