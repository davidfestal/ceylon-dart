import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class fun$A implements $ceylon$language.dart$$Basic {
  $dart$core.Function $capture$fun$idForA$get;
  fun$A([$dart$core.Function $capture$fun$idForA$get]) {
    this.$capture$fun$idForA$get = $capture$fun$idForA$get;
  }
  $dart$core.String get id => $capture$fun$idForA$get();
}
class fun$moreFun$B$X  extends fun$A {
  fun$moreFun$B $outer$default$fun$moreFun$B;
  $dart$core.Function $capture$fun$idForA$get;
  fun$moreFun$B$X([fun$moreFun$B $outer$default$fun$moreFun$B, $dart$core.Function $capture$fun$idForA$get]) : super($capture$fun$idForA$get) {
    this.$outer$default$fun$moreFun$B = $outer$default$fun$moreFun$B;
    this.$capture$fun$idForA$get = $capture$fun$idForA$get;
  }
}
class fun$moreFun$B implements $ceylon$language.dart$$Basic {
  $dart$core.Function $capture$fun$idForA$get;
  fun$moreFun$B([$dart$core.Function $capture$fun$idForA$get]) {
    this.$capture$fun$idForA$get = $capture$fun$idForA$get;
  }
  fun$moreFun$B$X $new$fun$moreFun$B$X() => new fun$moreFun$B$X(this, $capture$fun$idForA$get);
}
void $package$fun() {
  $dart$core.String idForA$get() => "A";

  void moreFun() {}

}

void fun() => $package$fun();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Boolean"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ($ceylon$language.String toplevel) {
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.dart.runtime.model::Module"), [$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}