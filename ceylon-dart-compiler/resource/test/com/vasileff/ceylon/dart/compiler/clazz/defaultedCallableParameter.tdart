import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class C implements $ceylon$language.dart$$Basic {
  C([$dart$core.Object f = $ceylon$language.dart$default]) : this.$s((() {
    if ($dart$core.identical(f, $ceylon$language.dart$default)) {
      f = new $ceylon$language.dart$Callable(([$ceylon$language.Integer i]) {
        $ceylon$language.print(i);
      });
    }
    return [f];
  })());
  C.$s([$dart$core.List a]) : this.$w(a[0]);
  C.$w([$ceylon$language.Callable f]) {
    this._f = f;
    this._f.f($ceylon$language.$ceylonInteger(5));
  }
  $ceylon$language.Callable _f;
}
void $package$run() {
  new C();
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"C":const{"mt":"c","nm":"C","super":const{"nm":"Basic","pk":"\$","md":"\$"},"sts":const[]}}};

var _$module = null;

get $module {
  if (_$module == null) {
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}