import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class Sup implements $ceylon$language.dart$$Basic {
  Sup([$dart$core.int a]) {
    this._a = a;
    $ceylon$language.print($ceylon$language.$ceylonInteger(this._a));
  }
  $dart$core.int _a;
}
class run$Sub  extends Sup {
  $dart$core.int $capture$run$x;
  run$Sub([$dart$core.int $capture$run$x, $dart$core.Object b = $ceylon$language.dart$default, $dart$core.Object c = $ceylon$language.dart$default]) : this.$s((() {
    if ($dart$core.identical(b, $ceylon$language.dart$default)) {
      b = $capture$run$x;
    }
    if ($dart$core.identical(c, $ceylon$language.dart$default)) {
      c = (b as $dart$core.int) + 1;
    }
    return [$capture$run$x, b, c];
  })());
  run$Sub.$s([$dart$core.List a]) : this.$w(a[0], a[1], a[2]);
  run$Sub.$w([$dart$core.int $capture$run$x, $dart$core.int b, $dart$core.int c]) : super(c) {
    this.$capture$run$x = $capture$run$x;
    this._b = b;
    this._c = c;
  }
  $dart$core.int _b;
  $dart$core.int _c;
}
void $package$run() {
  $dart$core.int x = 5;
  new run$Sub(x);
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"Sup":const{"mt":"c","nm":"Sup","super":const{"nm":"Basic","pk":"\$","md":"\$"},"sts":const[]}}};

var _$module = null;

get $module {
  if (_$module == null) {
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}