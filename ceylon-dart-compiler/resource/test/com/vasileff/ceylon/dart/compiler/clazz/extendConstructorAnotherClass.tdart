import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class A implements $ceylon$language.dart$$Basic {
  void _$init$A([$dart$core.int $bitmap, $dart$core.String $create$s]) {
    string = "";
    if (0 != ($bitmap & 1)) {
      this.string = $create$s;
    }
  }
  A.create([$dart$core.String s]) : this.create$d(1, s);
  A.create$d([$dart$core.int $bitmap, $dart$core.String $create$s]) {
    _$init$A($bitmap | 1, $create$s);
  }
  $dart$core.String string;
  $dart$core.String toString() => string;
}
class B  extends A {
  void _$init$B([$dart$core.int $bitmap, $dart$core.String $create$s]) {
    if (0 != ($bitmap & 1)) {}
  }
  B.create([$dart$core.String s]) : this.create$d(1, s);
  B.create$d([$dart$core.int $bitmap, $dart$core.String $create$s]) : super.create($create$s) {
    _$init$B($bitmap | 1, $create$s);
  }
}
void $package$run() {
  if (!((new B.create("works")).toString() == "works")) {
    throw new $ceylon$language.AssertionError("Violated: B.create(\"works\").string == \"works\"");
  }
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Boolean"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"A":const{"mt":"c","nm":"A","super":const{"nm":"Basic","pk":"\$","md":"\$"}},"B":const{"mt":"c","nm":"B","super":const{"nm":"A","pk":"."}}}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.dart.runtime.model::Module"), [$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}