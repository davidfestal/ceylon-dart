import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

$dart$core.int $package$counter = 0;

$dart$core.int get counter => $package$counter;

set counter($dart$core.int value) => $package$counter = value;

class run$Foo$FooMember implements $ceylon$language.dart$$Basic {
  run$Foo $outer$default$run$Foo;
  run$Foo$FooMember([run$Foo $outer$default$run$Foo, $dart$core.int fooMemberInt]) {
    this.$outer$default$run$Foo = $outer$default$run$Foo;
    this._fooMemberInt = fooMemberInt;
  }
  $dart$core.int _fooMemberInt;
  $dart$core.String get _fooMemberString2 => $outer$default$run$Foo.$capture$run$runString2;
  run$Foo get fooMemberHoldsAFooLazily => new run$Foo($outer$default$run$Foo.$capture$run$runString1, $outer$default$run$Foo.$capture$run$runString2, 11);
  $ceylon$language.Iterable get data => new $ceylon$language.Tuple.$withList([new $ceylon$language.Entry($ceylon$language.$ceylonString("fooString1"), $ceylon$language.$ceylonString($outer$default$run$Foo._fooString1)), new $ceylon$language.Entry($ceylon$language.$ceylonString("fooMemberString2"), $ceylon$language.$ceylonString(_fooMemberString2)), new $ceylon$language.Entry($ceylon$language.$ceylonString("fooInt"), $ceylon$language.$ceylonInteger($outer$default$run$Foo._fooInt)), new $ceylon$language.Entry($ceylon$language.$ceylonString("fooMemberInt"), $ceylon$language.$ceylonInteger(_fooMemberInt))]);
}
class run$Foo implements $ceylon$language.dart$$Basic {
  $dart$core.String $capture$run$runString1;
  $dart$core.String $capture$run$runString2;
  run$Foo([$dart$core.String $capture$run$runString1, $dart$core.String $capture$run$runString2, $dart$core.int fooInt]) {
    this.$capture$run$runString1 = $capture$run$runString1;
    this.$capture$run$runString2 = $capture$run$runString2;
    this._fooInt = fooInt;
    x = $new$run$Foo$FooMember((() {
      $dart$core.int tmp$0 = $package$counter;
      $package$counter = $ceylon$language.$dartInt($ceylon$language.$ceylonInteger($package$counter).successor);
      return tmp$0;
    })());
  }
  $dart$core.int _fooInt;
  $dart$core.String get _fooString1 => $capture$run$runString1;
  run$Foo$FooMember $new$run$Foo$FooMember([$dart$core.int fooMemberInt]) => new run$Foo$FooMember(this, fooMemberInt);
  run$Foo$FooMember x;
}
void $package$run() {
  $dart$core.String runString1 = "runString1";
  $dart$core.String runString2 = "runString2";
  run$Foo runFoo = new run$Foo(runString1, runString2, 33);
  $ceylon$language.printAll(runFoo.x.data);
  $ceylon$language.printAll(runFoo.x.data);
  $ceylon$language.printAll(runFoo.x.fooMemberHoldsAFooLazily.x.data);
  $ceylon$language.printAll(runFoo.x.fooMemberHoldsAFooLazily.x.data);
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
  if (_$module == null) {
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}