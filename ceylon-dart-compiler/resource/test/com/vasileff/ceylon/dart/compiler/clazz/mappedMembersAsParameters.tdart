import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class mappedInitializerParameters$C implements $ceylon$language.dart$$Basic {
    mappedInitializerParameters$C([$dart$core.Object string = $ceylon$language.dart$default]) : this.$s((() {
        if ($dart$core.identical(string, $ceylon$language.dart$default)) {
            string = "";
        }
        return [string];
    })());
    mappedInitializerParameters$C.$s([$dart$core.List a]) : this.$w(a[0]);
    mappedInitializerParameters$C.$w([$dart$core.String string]) {
        this._$s$mappedInitializerParameters$mappedInitializerParameters$C$string = string;
    }
    $dart$core.String _$s$mappedInitializerParameters$mappedInitializerParameters$C$string;
    $dart$core.String toString() => _$s$mappedInitializerParameters$mappedInitializerParameters$C$string;
}
class mappedInitializerParameters$D  extends mappedInitializerParameters$C {
    mappedInitializerParameters$D([$dart$core.Object string = $ceylon$language.dart$default, $dart$core.Object _$a = $ceylon$language.dart$default]) : this.$s((() {
        if ($dart$core.identical(string, $ceylon$language.dart$default)) {
            string = "s";
        }
        if ($dart$core.identical(_$a, $ceylon$language.dart$default)) {
            _$a = string;
        }
        return [string, _$a];
    })());
    mappedInitializerParameters$D.$s([$dart$core.List a]) : this.$w(a[0], a[1]);
    mappedInitializerParameters$D.$w([$dart$core.String string, $dart$core.String _$a]) : super(string) {
        this.string = string;
        this._$a = _$a;
    }
    $dart$core.String string;
    $dart$core.String _$a;
    $dart$core.String toString() => string;
    void test() {
        if (!(_$a == "s")) {
            throw new $ceylon$language.AssertionError("Violated: a == \"s\"");
        }
        if (!(toString() == "s")) {
            throw new $ceylon$language.AssertionError("Violated: string == \"s\"");
        }
        string = "ss";
        if (!(toString() == "ss")) {
            throw new $ceylon$language.AssertionError("Violated: string == \"ss\"");
        }
        if (!(super.toString() == "s")) {
            throw new $ceylon$language.AssertionError("Violated: super.string == \"s\"");
        }
    }
}
class mappedInitializerParameters$E implements $ceylon$language.dart$$Basic {
    mappedInitializerParameters$E([$dart$core.Object hashCode = $ceylon$language.dart$default]) : this.$s((() {
        if ($dart$core.identical(hashCode, $ceylon$language.dart$default)) {
            hashCode = 1;
        }
        return [hashCode];
    })());
    mappedInitializerParameters$E.$s([$dart$core.List a]) : this.$w(a[0]);
    mappedInitializerParameters$E.$w([$dart$core.int hashCode]) {
        this._$s$mappedInitializerParameters$mappedInitializerParameters$E$hashCode = hashCode;
    }
    $dart$core.int _$s$mappedInitializerParameters$mappedInitializerParameters$E$hashCode;
    $dart$core.int get hashCode => _$s$mappedInitializerParameters$mappedInitializerParameters$E$hashCode;
}
class mappedInitializerParameters$F  extends mappedInitializerParameters$E {
    mappedInitializerParameters$F([$dart$core.Object hashCode = $ceylon$language.dart$default, $dart$core.Object _$a = $ceylon$language.dart$default]) : this.$s((() {
        if ($dart$core.identical(hashCode, $ceylon$language.dart$default)) {
            hashCode = 2;
        }
        if ($dart$core.identical(_$a, $ceylon$language.dart$default)) {
            _$a = hashCode;
        }
        return [hashCode, _$a];
    })());
    mappedInitializerParameters$F.$s([$dart$core.List a]) : this.$w(a[0], a[1]);
    mappedInitializerParameters$F.$w([$dart$core.int hashCode, $dart$core.int _$a]) : super(hashCode) {
        this.hashCode = hashCode;
        this._$a = _$a;
    }
    $dart$core.int hashCode;
    $dart$core.int _$a;
    void test() {
        if (!(_$a == 2)) {
            throw new $ceylon$language.AssertionError("Violated: a == 2");
        }
        if (!(hashCode == 2)) {
            throw new $ceylon$language.AssertionError("Violated: hash == 2");
        }
        hashCode = 3;
        if (!(hashCode == 3)) {
            throw new $ceylon$language.AssertionError("Violated: hash == 3");
        }
        if (!(super.hashCode == 2)) {
            throw new $ceylon$language.AssertionError("Violated: super.hash == 2");
        }
    }
}
class mappedInitializerParameters$G implements $ceylon$language.dart$$Basic {
    mappedInitializerParameters$G([$dart$core.Object equals = $ceylon$language.dart$default]) : this.$s((() {
        if ($dart$core.identical(equals, $ceylon$language.dart$default)) {
            equals = new $ceylon$language.dart$Callable(([$dart$core.Object other]) => $ceylon$language.$false);
        }
        return [equals];
    })());
    mappedInitializerParameters$G.$s([$dart$core.List a]) : this.$w(a[0]);
    mappedInitializerParameters$G.$w([$ceylon$language.Callable equals]) {
        this._equals$c = equals;
    }
    $ceylon$language.Callable _equals$c;
    $dart$core.bool operator ==($dart$core.Object other) {
        return $ceylon$language.$dartBool(_equals$c.f(other));
    }
}
class mappedInitializerParameters$H  extends mappedInitializerParameters$G {
    mappedInitializerParameters$H([$dart$core.Object equals = $ceylon$language.dart$default, $dart$core.Object _$a = $ceylon$language.dart$default]) : this.$s((() {
        if ($dart$core.identical(equals, $ceylon$language.dart$default)) {
            equals = new $ceylon$language.dart$Callable(([$dart$core.Object other]) => $ceylon$language.$true);
        }
        if ($dart$core.identical(_$a, $ceylon$language.dart$default)) {
            _$a = equals;
        }
        return [equals, _$a];
    })());
    mappedInitializerParameters$H.$s([$dart$core.List a]) : this.$w(a[0], a[1]);
    mappedInitializerParameters$H.$w([$ceylon$language.Callable equals, $ceylon$language.Callable _$a]) : super(equals) {
        this._$a = _$a;
        this._equals$c = equals;
    }
    $ceylon$language.Callable _$a;
    $ceylon$language.Callable _equals$c;
    void test() {
        if (!($ceylon$language.$dartBool(_$a.f($ceylon$language.$ceylonString("")) as $ceylon$language.Boolean) == true)) {
            throw new $ceylon$language.AssertionError("Violated: a(\"\") == true");
        }
        if (!((this == $ceylon$language.$ceylonString("")) == true)) {
            throw new $ceylon$language.AssertionError("Violated: equals(\"\") == true");
        }
        if (!((super == $ceylon$language.$ceylonString("")) == true)) {
            throw new $ceylon$language.AssertionError("Violated: super.equals(\"\") == true");
        }
    }
    $dart$core.bool operator ==($dart$core.Object other) {
        return $ceylon$language.$dartBool(_equals$c.f(other));
    }
}
void $package$mappedInitializerParameters() {
    (new mappedInitializerParameters$D()).test();
    (new mappedInitializerParameters$F()).test();
    (new mappedInitializerParameters$H()).test();
}

void mappedInitializerParameters() => $package$mappedInitializerParameters();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}