import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class Foo$FooMember implements $ceylon$language.dart$$Basic {
  Foo $outer$default$Foo;
  Foo$FooMember([Foo $outer$default$Foo]) {
    this.$outer$default$Foo = $outer$default$Foo;
  }
}
class Foo implements $ceylon$language.dart$$Basic {
  Foo() {
    _x = new Foo$FooMember(this);
  }
  Foo$FooMember _x;
}
$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"Foo":const{"mt":"c","nm":"Foo","super":const{"nm":"Basic","pk":"\$","md":"\$"},"sts":const[],"\$c":const{"FooMember":const{"mt":"c","nm":"FooMember","super":const{"nm":"Basic","pk":"\$","md":"\$"},"sts":const[]}}}}};

var _$module = null;

get $module {
  if (_$module == null) {
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}