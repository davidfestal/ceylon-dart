import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class run$A$B$C  extends run$A$B {
    run$A$B $outer$default$run$A$B;
    run$A get $outer$default$run$A => $outer$default$run$A$B.$outer$default$run$A;
    run$A$B$C([run$A$B $outer$default$run$A$B]) : super($outer$default$run$A$B.$outer$default$run$A, "") {
        this.$outer$default$run$A$B = $outer$default$run$A$B;
    }
}
class run$A$B implements $ceylon$language.dart$$Basic {
    run$A $outer$default$run$A;
    run$A$B([run$A $outer$default$run$A, $dart$core.String s]) {
        this.$outer$default$run$A = $outer$default$run$A;
        this._$s = s;
    }
    $dart$core.String _$s;
    run$A$B$C $new$run$A$B$C() => new run$A$B$C(this);
}
class run$A$D  extends run$A$B {
    run$A $outer$default$run$A;
    run$A$D([run$A $outer$default$run$A]) : super($outer$default$run$A, "") {
        this.$outer$default$run$A = $outer$default$run$A;
    }
}
class run$A$E  extends run$A {
    run$A $outer$default$run$A;
    $dart$core.Function $capture$run$foo;
    run$A$E([run$A $outer$default$run$A, $dart$core.Function $capture$run$foo]) : super($capture$run$foo, "") {
        this.$outer$default$run$A = $outer$default$run$A;
        this.$capture$run$foo = $capture$run$foo;
    }
}
class run$A implements $ceylon$language.dart$$Basic {
    $dart$core.Function $capture$run$foo;
    run$A([$dart$core.Function $capture$run$foo, $dart$core.String s]) {
        this.$capture$run$foo = $capture$run$foo;
        this._$s = s;
    }
    $dart$core.String _$s;
    void myFoo() {
        $capture$run$foo();
    }
    run$A$B $new$run$A$B([$dart$core.String s]) => new run$A$B(this, s);
    run$A$D $new$run$A$D() => new run$A$D(this);
    run$A$E $new$run$A$E() => new run$A$E(this, $capture$run$foo);
}
void $package$run() {
    void foo() {}

}

void run() => $package$run();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}