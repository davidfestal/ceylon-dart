import "dart:core" as $dart$core;
import "package:ceylon/language/language.dart" as $ceylon$language;

class I1$I2$C implements $ceylon$language.dart$$Basic, I1$I2 {
    I1$I2 $outer$default$I1$I2;
    I1 get $outer$default$I1 => $outer$default$I1$I2.$outer$default$I1;
    I1$I2$C([I1$I2 $outer$default$I1$I2, $dart$core.int _$version]) {
        this.$outer$default$I1$I2 = $outer$default$I1$I2;
        this._$version = _$version;
    }
    $dart$core.int _$version;
    $dart$core.String get cident => ("c-" + _$version.toString()) + "";
    $dart$core.String get couterIdent => $outer$default$I1$I2.ident;
    $dart$core.String get ident => ("i2byC-" + _$version.toString()) + "";
    $dart$core.String get outerIdent => I1$I2.$get$outerIdent(this);
    I1$I2$C $new$I1$I2$C([$dart$core.int _$version]) => I1$I2.$$new$I1$I2$C(this, _$version);
}
abstract class I1$I2 {
    I1 get $outer$default$I1;
    $dart$core.String get ident;
    static $dart$core.String $get$ident([final I1$I2 $this]) => "i2";
    $dart$core.String get outerIdent;
    static $dart$core.String $get$outerIdent([final I1$I2 $this]) => $this.$outer$default$I1.ident;
    static I1$I2$C $$new$I1$I2$C([final I1$I2 $this, $dart$core.int _$version]) => new I1$I2$C($this, _$version);
    I1$I2$C $new$I1$I2$C([$dart$core.int _$version]);
}
abstract class I1 {
    $dart$core.String get ident;
    static $dart$core.String $get$ident([final I1 $this]) => "i1";
    I1$I2 get i2;
}
class run$i1o$$anonymous$0_$i2$$anonymous$1_ implements $ceylon$language.dart$$Basic, I1$I2 {
    run$i1o$$anonymous$0_ $outer$default$run$i1o$$anonymous$0_;
    I1 get $outer$default$I1 => $outer$default$run$i1o$$anonymous$0_;
    run$i1o$$anonymous$0_$i2$$anonymous$1_([run$i1o$$anonymous$0_ $outer$default$run$i1o$$anonymous$0_]) {
        this.$outer$default$run$i1o$$anonymous$0_ = $outer$default$run$i1o$$anonymous$0_;
    }
    $dart$core.String get ident => "i2o";
    $dart$core.String get outerIdent => $outer$default$run$i1o$$anonymous$0_.ident;
    I1$I2$C $new$I1$I2$C([$dart$core.int _$version]) => I1$I2.$$new$I1$I2$C(this, _$version);
}
class run$i1o$$anonymous$0_ implements $ceylon$language.dart$$Basic, I1 {
    run$i1o$$anonymous$0_() {}
    $dart$core.String get ident => "i1o";
    I1$I2 get i2 => new run$i1o$$anonymous$0_$i2$$anonymous$1_(this);
}
void $package$run() {
    I1 i1o$get() => new run$i1o$$anonymous$0_();

    $ceylon$language.Callable newC$get() => new $ceylon$language.dart$Callable(([$dart$core.Object $r]) => new $ceylon$language.dart$Callable(([$dart$core.Object $0]) => ($r as I1$I2).$new$I1$I2$C($ceylon$language.$dartInt($0 as $ceylon$language.Integer))));

    I1$I2$C c = (newC$get().f(i1o$get().i2) as $ceylon$language.Callable).f($ceylon$language.$ceylonInteger(1)) as I1$I2$C;
    I1$I2$C c1 = (() {
        I1$I2 $r = i1o$get().i2;
        return new $ceylon$language.dart$Callable(([$dart$core.Object $0]) => $r.$new$I1$I2$C($ceylon$language.$dartInt($0 as $ceylon$language.Integer)));
    })().f($ceylon$language.$ceylonInteger(1)) as I1$I2$C;
    I1$I2$C c2 = (() {
        I1$I2 $r = i1o$get().i2;
        return new $ceylon$language.dart$Callable(([$dart$core.Object $0]) => $r.$new$I1$I2$C($ceylon$language.$dartInt($0 as $ceylon$language.Integer)));
    })().f($ceylon$language.$ceylonInteger(1)) as I1$I2$C;
    if (!(c.cident == "c-1")) {
        throw new $ceylon$language.AssertionError("Violated: c.cident == \"c-1\"");
    }
    if (!(c.couterIdent == "i2o")) {
        throw new $ceylon$language.AssertionError("Violated: c.couterIdent == \"i2o\"");
    }
    if (!(c.ident == "i2byC-1")) {
        throw new $ceylon$language.AssertionError("Violated: c.ident == \"i2byC-1\"");
    }
    if (!(c.outerIdent == "i1o")) {
        throw new $ceylon$language.AssertionError("Violated: c.outerIdent == \"i1o\"");
    }
    I1$I2$C cSelfOuter = (newC$get().f(c) as $ceylon$language.Callable).f($ceylon$language.$ceylonInteger(2)) as I1$I2$C;
    if (!(cSelfOuter.cident == "c-2")) {
        throw new $ceylon$language.AssertionError("Violated: cSelfOuter.cident == \"c-2\"");
    }
    if (!(cSelfOuter.couterIdent == "i2byC-1")) {
        throw new $ceylon$language.AssertionError("Violated: cSelfOuter.couterIdent == \"i2byC-1\"");
    }
    if (!(cSelfOuter.ident == "i2byC-2")) {
        throw new $ceylon$language.AssertionError("Violated: cSelfOuter.ident == \"i2byC-2\"");
    }
    if (!(cSelfOuter.outerIdent == "i1o")) {
        throw new $ceylon$language.AssertionError("Violated: cSelfOuter.outerIdent == \"i1o\"");
    }
    $ceylon$language.print($ceylon$language.String.instance("done"));
}

void run() => $package$run();