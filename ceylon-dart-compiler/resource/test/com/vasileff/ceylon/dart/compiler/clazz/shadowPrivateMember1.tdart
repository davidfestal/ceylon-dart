import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class run$A implements $ceylon$language.dart$$Basic {
    run$A() {}
    $dart$core.String get _$id => "A";
    $dart$core.String get idA => _$id;
}
class run$B  extends run$A {
    run$B() {}
    $dart$core.String get _$id$1 => "B";
    $dart$core.String get idB => _$id$1;
}
void $package$run() {
    if (!((new run$B()).idA == "A")) {
        throw new $ceylon$language.AssertionError("Violated: B().idA == \"A\"");
    }
    if (!((new run$B()).idB == "B")) {
        throw new $ceylon$language.AssertionError("Violated: B().idB == \"B\"");
    }
}

void run() => $package$run();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}