import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class X implements $ceylon$language.dart$$Basic {
  X() {
    string = "hello";
  }
  $dart$core.String string;
  $dart$core.String toString() => string;
}
class Y implements $ceylon$language.dart$$Basic {
  Y() {}
  $dart$core.String toString() => "hello";
}
class Z implements $ceylon$language.dart$$Basic {
  Z() {
    string = "hello";
  }
  $dart$core.String string;
  $dart$core.String toString() => string;
}
$dart$core.String $package$bar() => "";

$dart$core.String bar() => $package$bar();

$ceylon$language.Callable $package$barCurry() => new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::String"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), () => $ceylon$language.$ceylonString((() => "")()));

$ceylon$language.Callable barCurry() => $package$barCurry();

abstract class I {
  $dart$core.String get id;
  $dart$core.String foo();
  static $dart$core.String $foo([final I $this]) => "defaultFoo";
}
class A implements $ceylon$language.dart$$Basic, I {
  A() {
    id = "hello";
    foo$c = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::String"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), () => $ceylon$language.$ceylonString($package$bar()));
  }
  $dart$core.String id;
  $ceylon$language.Callable foo$c;
  $dart$core.String foo() {
    return $ceylon$language.$dartString(foo$c.f());
  }
}
class B implements $ceylon$language.dart$$Basic, I {
  B() {
    _barCurryRef = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::String()"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), $package$barCurry);
    foo$c = _barCurryRef.f() as $ceylon$language.Callable;
  }
  $dart$core.String get id => "hello";
  $ceylon$language.Callable _barCurryRef;
  $ceylon$language.Callable foo$c;
  $dart$core.String foo() {
    return $ceylon$language.$dartString(foo$c.f());
  }
}
class C implements $ceylon$language.dart$$Basic, I {
  C() {
    id = "hello";
    fdf$c = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::String"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), () => $ceylon$language.$ceylonString("fdfImpl"));
  }
  $dart$core.String id;
  $ceylon$language.Callable fdf$c;
  $dart$core.String fdf() {
    return $ceylon$language.$dartString(fdf$c.f());
  }
  $dart$core.String foo() => I.$foo(this);
}
$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Boolean"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ($ceylon$language.String toplevel) {
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"X":const{"mt":"c","nm":"X","super":const{"nm":"Basic","pk":"\$","md":"\$"}},"Y":const{"mt":"c","nm":"Y","super":const{"nm":"Basic","pk":"\$","md":"\$"}},"Z":const{"mt":"c","nm":"Z","super":const{"nm":"Basic","pk":"\$","md":"\$"}},"I":const{"mt":"i","nm":"I"},"A":const{"mt":"c","nm":"A","super":const{"nm":"Basic","pk":"\$","md":"\$"},"sts":const[const{"nm":"I","pk":"."}]},"B":const{"mt":"c","nm":"B","super":const{"nm":"Basic","pk":"\$","md":"\$"},"sts":const[const{"nm":"I","pk":"."}]},"C":const{"mt":"c","nm":"C","super":const{"nm":"Basic","pk":"\$","md":"\$"},"sts":const[const{"nm":"I","pk":"."}]}}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.dart.runtime.model::Module"), [$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}