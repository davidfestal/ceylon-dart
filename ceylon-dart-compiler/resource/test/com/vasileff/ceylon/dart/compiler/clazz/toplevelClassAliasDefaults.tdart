import "dart:core" as $dart$core;
import "package:ceylon/language/language.dart" as $ceylon$language;

class C {
    C([$dart$core.Object a = $ceylon$language.dart$default]) : this.$s((() {
        if ($dart$core.identical(a, $ceylon$language.dart$default)) {
            a = 10;
        }
        return [a];
    })());
    C.$s([$dart$core.List a]) : this.$w(a[0]);
    C.$w([$dart$core.Object a]) {
        this.i = a as $dart$core.int;
    }
    C.create([$dart$core.Object a = $ceylon$language.dart$default, $dart$core.Object b = $ceylon$language.dart$default]) : this.create$s((() {
        if ($dart$core.identical(a, $ceylon$language.dart$default)) {
            a = 20;
        }
        if ($dart$core.identical(b, $ceylon$language.dart$default)) {
            b = 30;
        }
        return [a, b];
    })());
    C.create$s([$dart$core.List a]) : this.create$w(a[0], a[1]);
    C.create$w([$dart$core.Object a, $dart$core.Object b]) {
        this.i = (a as $dart$core.int) + (b as $dart$core.int);
    }
    $dart$core.int i;
}
class D  extends C {
    D([$dart$core.int _$p]) : super(_$p) {
        this._$p = _$p;
    }
    $dart$core.int _$p;
}
void $package$run() {
    if (!((new C(10)).i == 10)) {
        throw new $ceylon$language.AssertionError("Violated: CAlias(10).i == 10");
    }
    if (!((() {
        $dart$core.int arg$0$0 = 10;
        return new C(arg$0$0);
    })().i == 10)) {
        throw new $ceylon$language.AssertionError("Violated: CAlias {x = 10;}.i == 10");
    }
    if (!((new D(10)).i == 10)) {
        throw new $ceylon$language.AssertionError("Violated: D(10).i == 10");
    }
    if (!((() {
        $dart$core.int arg$1$0 = 10;
        return new D(arg$1$0);
    })().i == 10)) {
        throw new $ceylon$language.AssertionError("Violated: D {p = 10;}.i == 10");
    }
}

void run() => $package$run();