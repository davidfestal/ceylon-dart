import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

abstract class I {
  $dart$core.String get i1;
  $dart$core.String get i2;
  $dart$core.String get i3;
  set i3($dart$core.String i3);
  $dart$core.String get i4;
  set i4($dart$core.String i4);
}
class C implements $ceylon$language.dart$$Basic, I {
  C() {
    i1 = "";
    i3 = "";
    i1 = "i1-1";
    i2 = "i2-1";
    i3 = "i3-1";
    i4 = "i4-1";
    i1 = "i1-2";
    i2 = "i2-2";
    i3 = "i3-2";
    i4 = "i4-2";
    c1 = "";
    _c3 = "";
    c1 = "c1-1";
    c2 = "c2-1";
    _c3 = "c3-1";
    _c4 = "c4-1";
    c1 = "c1-2";
    c2 = "c2-2";
    _c3 = "c3-2";
    _c4 = "c4-2";
  }
  $dart$core.String i1;
  $dart$core.String i2;
  $dart$core.String i3;
  $dart$core.String i4;
  $dart$core.String c1;
  $dart$core.String c2;
  $dart$core.String _c3;
  $dart$core.String _c4;
}
$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Boolean"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ($ceylon$language.String toplevel) {
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"I":const{"mt":"i","nm":"I"},"C":const{"mt":"c","nm":"C","super":const{"nm":"Basic","pk":"\$","md":"\$"},"sts":const[const{"nm":"I","pk":"."}]}}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.dart.runtime.model::Module"), [$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}