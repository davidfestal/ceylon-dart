import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

$dart$core.Object $package$generic([final $ceylon$dart$runtime$model.runtime$TypeDescriptor T, $dart$core.Object x]) {
  return x;
}

$dart$core.Object generic([final $ceylon$dart$runtime$model.runtime$TypeDescriptor T, $dart$core.Object x]) => $package$generic(T, x);

$dart$core.String $package$nonGeneric([$dart$core.String x]) {
  return x;
}

$dart$core.String nonGeneric([$dart$core.String x]) => $package$nonGeneric(x);

void $package$run() {
  $dart$core.String myString1 = $ceylon$language.$dartString($package$generic(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::String"), $ceylon$language.$ceylonString("true")) as $ceylon$language.String);
  $dart$core.String myString2 = $package$nonGeneric("true");
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Boolean"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.dart.runtime.model::Module"), [$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}