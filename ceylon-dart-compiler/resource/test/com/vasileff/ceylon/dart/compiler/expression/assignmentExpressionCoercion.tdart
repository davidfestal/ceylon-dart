import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

void $package$assignmentExpressionCoercion() {
  $dart$core.Object x = null;
  $dart$core.double two = 1.0 + $ceylon$language.$dartInt((x = $ceylon$language.$ceylonInteger(1)) as $ceylon$language.Integer).toDouble();
  if (!(two == 2.0)) {
    throw new $ceylon$language.AssertionError("Violated: two == 2.0");
  }
  if (!(x is $ceylon$language.Integer)) {
    throw new $ceylon$language.AssertionError("Violated: x is Integer");
  }
}

void assignmentExpressionCoercion() => $package$assignmentExpressionCoercion();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "assignmentExpressionCoercion" :
    $package$assignmentExpressionCoercion();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
  if (_$module == null) {
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}