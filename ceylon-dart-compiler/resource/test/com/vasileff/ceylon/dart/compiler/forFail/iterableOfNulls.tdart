import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

$ceylon$language.Iterable $package$myIterable = $ceylon$language.nothing as $ceylon$language.Iterable;

$ceylon$language.Iterable get myIterable => $package$myIterable;

void $package$run() {{
        $ceylon$language.Finished element$1;
        $ceylon$language.Iterator iterator$0 = $package$myIterable.iterator();
        while ((element$1 = iterator$0.next() as $ceylon$language.Finished) is !$ceylon$language.Finished) {
            $dart$core.Object x;
            {
                x = element$1;
            }
            $ceylon$language.print(x);
        }
    }
}

void run() => $package$run();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}