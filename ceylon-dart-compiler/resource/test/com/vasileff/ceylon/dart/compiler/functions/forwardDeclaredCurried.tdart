import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

void $package$run() {
  $ceylon$language.Callable echo1$c;
  $ceylon$language.Callable echo1([$dart$core.String s]) {
    $ceylon$language.Callable echo1$c1 = echo1$c.f($ceylon$language.$ceylonString(s));
    return new $ceylon$language.dart$Callable(([$ceylon$language.String $0]) => $ceylon$language.$ceylonString((($ceylon$language.String t) {
      return $ceylon$language.$dartString(echo1$c1.f(t));
    })($0)));
  }

  $ceylon$language.Callable echo2$c;
  $ceylon$language.Callable echo2([$dart$core.String s]) {
    $ceylon$language.Callable echo2$c1 = echo2$c.f($ceylon$language.$ceylonString(s));
    return new $ceylon$language.dart$Callable(([$ceylon$language.String $0]) => $ceylon$language.$ceylonString((($ceylon$language.String t) {
      return $ceylon$language.$dartString(echo2$c1.f(t));
    })($0)));
  }

  echo1$c = new $ceylon$language.dart$Callable(([$ceylon$language.String s]) => new $ceylon$language.dart$Callable(([$ceylon$language.String t]) => $ceylon$language.$ceylonString($ceylon$language.$dartString(s) + $ceylon$language.$dartString(t))));
  echo2$c = new $ceylon$language.dart$Callable(([$ceylon$language.String s]) => new $ceylon$language.dart$Callable(([$ceylon$language.String t]) => $ceylon$language.$ceylonString($ceylon$language.$dartString(s) + $ceylon$language.$dartString(t))));
  if (!($ceylon$language.$dartString(echo1("wor").f($ceylon$language.$ceylonString("ks")) as $ceylon$language.String) == "works")) {
    throw new $ceylon$language.AssertionError("Violated: echo1(\"wor\")(\"ks\") == \"works\"");
  }
  if (!($ceylon$language.$dartString(echo2("wor").f($ceylon$language.$ceylonString("ks")) as $ceylon$language.String) == "works")) {
    throw new $ceylon$language.AssertionError("Violated: echo2(\"wor\")(\"ks\") == \"works\"");
  }
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}