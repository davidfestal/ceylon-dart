import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

abstract class run$I1 {
    $dart$core.int get i1capturedX;
    static $dart$core.int $get$i1capturedX([final run$I1 $this]) => $this.$capture$run$x;
    $dart$core.int $capture$run$x;
}
abstract class run$I2 implements run$I1 {
    $dart$core.int get i2capturedX;
    static $dart$core.int $get$i2capturedX([final run$I2 $this]) => $this.$capture$run$x;
}
void $package$run() {
    $dart$core.int x = 5;
}

void run() => $package$run();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}