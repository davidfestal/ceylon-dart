import "dart:core" as $dart$core;
import "package:ceylon/language/language.dart" as $ceylon$language;

class I$SharedClass {
    I $outer$default$I;
    I$SharedClass([I $outer$default$I]) {
        this.$outer$default$I = $outer$default$I;
    }
}
class I$NonSharedClass {
    I $outer$default$I;
    I$NonSharedClass([I $outer$default$I]) {
        this.$outer$default$I = $outer$default$I;
    }
}
class I$C {
    I $outer$default$I;
    I$C([I $outer$default$I]) {
        this.$outer$default$I = $outer$default$I;
    }
    void test() {
        $outer$default$I.sharedInt();
        I.$_$nonSharedInt($outer$default$I);
        $ceylon$language.Callable si = new $ceylon$language.dart$Callable($outer$default$I.sharedInt);
        $ceylon$language.Callable nsi = new $ceylon$language.dart$Callable(() => I.$_$nonSharedInt($outer$default$I));
        $outer$default$I.$new$I$SharedClass();
        new I$NonSharedClass($outer$default$I);
        $ceylon$language.Callable sc = new $ceylon$language.dart$Callable(() => $outer$default$I.$new$I$SharedClass());
        $ceylon$language.Callable nsc = new $ceylon$language.dart$Callable(() => new I$NonSharedClass($outer$default$I));
        $ceylon$language.noop(new $ceylon$language.Tuple.$withList([$outer$default$I.sharedTransient]));
        $ceylon$language.noop(new $ceylon$language.Tuple.$withList([I.$get$_$nonSharedTransient($outer$default$I)]));
        $outer$default$I.sharedTransient = $ceylon$language.Integer.instance(4);
        I.$set$_$nonSharedTransient($outer$default$I, $ceylon$language.Integer.instance(5));
    }
}
abstract class I {
    $dart$core.Object sharedInt();
    static $dart$core.Object $sharedInt([final I $this]) => $ceylon$language.Integer.instance(1);
    static $dart$core.Object $_$nonSharedInt([final I $this]) => $ceylon$language.Integer.instance(1);
    $dart$core.Object get sharedTransient;
    static $dart$core.Object $get$sharedTransient([final I $this]) => $ceylon$language.Integer.instance(1);
    static $dart$core.Object $get$_$nonSharedTransient([final I $this]) => $ceylon$language.Integer.instance(1);
    void set sharedTransient($dart$core.Object sharedTransient);
    static $dart$core.Object $set$sharedTransient([final I $this, $dart$core.Object sharedTransient]) {
        return sharedTransient;
    }
    static $dart$core.Object $set$_$nonSharedTransient([final I $this, $dart$core.Object nonSharedTransient]) {
        return nonSharedTransient;
    }
    static I$SharedClass $$new$I$SharedClass([final I $this]) => new I$SharedClass($this);
    I$SharedClass $new$I$SharedClass();
}