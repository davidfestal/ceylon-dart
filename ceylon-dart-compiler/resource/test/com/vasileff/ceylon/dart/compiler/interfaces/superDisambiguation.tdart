import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

abstract class Top {
  $dart$core.String fun();
  static $dart$core.String $fun([final Top $this]) => "";
}
abstract class Left implements Top {
  $dart$core.String fun();
  static $dart$core.String $fun([final Left $this]) => "";
}
abstract class Right implements Top {
  $dart$core.String fun();
  static $dart$core.String $fun([final Right $this]) => "";
}
abstract class Right2 implements Right {
}
abstract class Bottom implements Left, Right2 {
  $dart$core.String fun();
  static $dart$core.String $fun([final Bottom $this]) => Right.$fun($this);
}
$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Boolean"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ($ceylon$language.String toplevel) {
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"Top":const{"mt":"i","nm":"Top"},"Left":const{"mt":"i","nm":"Left","sts":const[const{"nm":"Top","pk":"."}]},"Right":const{"mt":"i","nm":"Right","sts":const[const{"nm":"Top","pk":"."}]},"Right2":const{"mt":"i","nm":"Right2","sts":const[const{"nm":"Right","pk":"."}]},"Bottom":const{"mt":"i","nm":"Bottom","sts":const[const{"nm":"Left","pk":"."}, const{"nm":"Right2","pk":"."}]}}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.dart.runtime.model::Module"), [$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}