import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

void $package$run() {
  $ceylon$language.Sequence fa([$dart$core.int a, $dart$core.Object b = $ceylon$language.dart$default, $ceylon$language.Sequential rest]) {
    if ($dart$core.identical(b, $ceylon$language.dart$default)) {
      b = 99;
    }
    return new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer, ceylon.language::Integer*]"), [$ceylon$language.$ceylonInteger(a), $ceylon$language.$ceylonInteger(b as $dart$core.int)], rest);
  }

  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$0$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(1)]);
    return fa($ceylon$language.$dartInt(arg$0$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.dart$default, $ceylon$language.empty);
  })());
  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$1$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)]);
    return fa($ceylon$language.$dartInt(arg$1$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.$dartInt(arg$1$s.getFromFirst(1) as $ceylon$language.Integer), $ceylon$language.empty);
  })());
  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$2$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[2]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3)]);
    return fa($ceylon$language.$dartInt(arg$2$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.$dartInt(arg$2$s.getFromFirst(1) as $ceylon$language.Integer), arg$2$s.spanFrom($ceylon$language.$ceylonInteger(2)));
  })());
  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$3$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[3]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3), $ceylon$language.$ceylonInteger(4)]);
    return fa($ceylon$language.$dartInt(arg$3$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.$dartInt(arg$3$s.getFromFirst(1) as $ceylon$language.Integer), arg$3$s.spanFrom($ceylon$language.$ceylonInteger(2)));
  })());
  $ceylon$language.print(fa(1, $ceylon$language.dart$default, $ceylon$language.empty));
  $ceylon$language.print((() {
    $dart$core.int arg$4$0 = 1;
    $ceylon$language.Empty arg$4$s = $ceylon$language.empty;
    return fa(arg$4$0, $ceylon$language.dart$default, $ceylon$language.empty);
  })());
  $ceylon$language.print((() {
    $dart$core.int arg$5$0 = 1;
    $ceylon$language.Tuple arg$5$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(2)]);
    return fa(arg$5$0, $ceylon$language.$dartInt(arg$5$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.empty);
  })());
  $ceylon$language.print((() {
    $dart$core.int arg$6$0 = 1;
    $ceylon$language.Tuple arg$6$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3)]);
    return fa(arg$6$0, $ceylon$language.$dartInt(arg$6$s.getFromFirst(0) as $ceylon$language.Integer), arg$6$s.spanFrom($ceylon$language.$ceylonInteger(1)));
  })());
  $ceylon$language.print((() {
    $dart$core.int arg$7$0 = 1;
    $ceylon$language.Tuple arg$7$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[2]"), [$ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3), $ceylon$language.$ceylonInteger(4)]);
    return fa(arg$7$0, $ceylon$language.$dartInt(arg$7$s.getFromFirst(0) as $ceylon$language.Integer), arg$7$s.spanFrom($ceylon$language.$ceylonInteger(1)));
  })());
  $ceylon$language.Sequence fb([$dart$core.int a, $dart$core.int b, $ceylon$language.Sequential rest]) => new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer, ceylon.language::Integer*]"), [$ceylon$language.$ceylonInteger(a), $ceylon$language.$ceylonInteger(b)], rest);

  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$8$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)]);
    return fb($ceylon$language.$dartInt(arg$8$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.$dartInt(arg$8$s.getFromFirst(1) as $ceylon$language.Integer), $ceylon$language.empty);
  })());
  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$9$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[2]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3)]);
    return fb($ceylon$language.$dartInt(arg$9$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.$dartInt(arg$9$s.getFromFirst(1) as $ceylon$language.Integer), arg$9$s.spanFrom($ceylon$language.$ceylonInteger(2)));
  })());
  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$10$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[3]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3), $ceylon$language.$ceylonInteger(4)]);
    return fb($ceylon$language.$dartInt(arg$10$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.$dartInt(arg$10$s.getFromFirst(1) as $ceylon$language.Integer), arg$10$s.spanFrom($ceylon$language.$ceylonInteger(2)));
  })());
  $ceylon$language.print((() {
    $dart$core.int arg$11$0 = 1;
    $ceylon$language.Tuple arg$11$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(2)]);
    return fb(arg$11$0, $ceylon$language.$dartInt(arg$11$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.empty);
  })());
  $ceylon$language.print((() {
    $dart$core.int arg$12$0 = 1;
    $ceylon$language.Tuple arg$12$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3)]);
    return fb(arg$12$0, $ceylon$language.$dartInt(arg$12$s.getFromFirst(0) as $ceylon$language.Integer), arg$12$s.spanFrom($ceylon$language.$ceylonInteger(1)));
  })());
  $ceylon$language.print((() {
    $dart$core.int arg$13$0 = 1;
    $ceylon$language.Tuple arg$13$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[2]"), [$ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3), $ceylon$language.$ceylonInteger(4)]);
    return fb(arg$13$0, $ceylon$language.$dartInt(arg$13$s.getFromFirst(0) as $ceylon$language.Integer), arg$13$s.spanFrom($ceylon$language.$ceylonInteger(1)));
  })());
  $ceylon$language.Sequence fc([$dart$core.int a, $dart$core.Object b = $ceylon$language.dart$default]) {
    if ($dart$core.identical(b, $ceylon$language.dart$default)) {
      b = 99;
    }
    return new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(a), $ceylon$language.$ceylonInteger(b as $dart$core.int)]);
  }

  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$14$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(1)]);
    return fc($ceylon$language.$dartInt(arg$14$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.dart$default);
  })());
  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$15$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)]);
    return fc($ceylon$language.$dartInt(arg$15$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.$dartInt(arg$15$s.getFromFirst(1) as $ceylon$language.Integer));
  })());
  $ceylon$language.print((() {
    $dart$core.int arg$16$0 = 1;
    $ceylon$language.Tuple arg$16$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(2)]);
    return fc(arg$16$0, $ceylon$language.$dartInt(arg$16$s.getFromFirst(0) as $ceylon$language.Integer));
  })());
  $ceylon$language.Sequence fd([$dart$core.int a, $dart$core.int b]) => new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(a), $ceylon$language.$ceylonInteger(b)]);

  $ceylon$language.print((() {
    $ceylon$language.Tuple arg$17$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)]);
    return fd($ceylon$language.$dartInt(arg$17$s.getFromFirst(0) as $ceylon$language.Integer), $ceylon$language.$dartInt(arg$17$s.getFromFirst(1) as $ceylon$language.Integer));
  })());
  $ceylon$language.print((() {
    $dart$core.int arg$18$0 = 1;
    $ceylon$language.Tuple arg$18$s = new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(2)]);
    return fd(arg$18$0, $ceylon$language.$dartInt(arg$18$s.getFromFirst(0) as $ceylon$language.Integer));
  })());
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Boolean"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.dart.runtime.model::Module"), [$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}