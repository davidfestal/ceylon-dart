import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

void $package$run() {
  $ceylon$language.Callable f2 = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer, ceylon.language::Integer, ceylon.language::Integer*]"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer, ceylon.language::Integer, ceylon.language::Integer*]"), ([$ceylon$language.Integer a, $ceylon$language.Integer b, $ceylon$language.Sequential xs]) => new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer, ceylon.language::Integer*]"), [a, b], xs), 2);
  $ceylon$language.Callable f1 = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer, ceylon.language::Integer*]"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer, ceylon.language::Integer*]"), ([$ceylon$language.Integer a, $ceylon$language.Sequential xs]) => new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[]"), [a], xs), 1);
  $ceylon$language.Callable f0 = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[]"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[]"), ([$ceylon$language.Sequential xs]) => xs, 0);
  $ceylon$language.print(f0.s((new $ceylon$language.LazyIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), 4, (final $dart$core.int $i$) {
    switch ($i$) {
    case 0 :
      return $ceylon$language.$ceylonInteger(1);
    case 1 :
      return $ceylon$language.$ceylonInteger(2);
    case 2 :
      return $ceylon$language.$ceylonInteger(3);
    case 3 :
      return $ceylon$language.$ceylonInteger(4);
    }
  }, null)).sequence()));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f2.f($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3), $ceylon$language.$ceylonInteger(4)));
  $ceylon$language.print(f2.f($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3)));
  $ceylon$language.print(f2.f($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f2.s($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(4)])));
  $ceylon$language.print(f2.s($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3), $ceylon$language.empty));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f2.s($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(3), $ceylon$language.$ceylonInteger(4)])));
  $ceylon$language.print(f2.s($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(3)])));
  $ceylon$language.print(f2.s($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.empty));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f2.s($ceylon$language.$ceylonInteger(1), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[2]"), [$ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3), $ceylon$language.$ceylonInteger(4)])));
  $ceylon$language.print(f2.s($ceylon$language.$ceylonInteger(1), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3)])));
  $ceylon$language.print(f2.s($ceylon$language.$ceylonInteger(1), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(2)])));
  $ceylon$language.print(f2.s(new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)])));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f1.f($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3)));
  $ceylon$language.print(f1.f($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)));
  $ceylon$language.print(f1.f($ceylon$language.$ceylonInteger(1)));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f1.s($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(3)])));
  $ceylon$language.print(f1.s($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.empty));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f1.s($ceylon$language.$ceylonInteger(1), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3)])));
  $ceylon$language.print(f1.s($ceylon$language.$ceylonInteger(1), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(2)])));
  $ceylon$language.print(f1.s($ceylon$language.$ceylonInteger(1), $ceylon$language.empty));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f1.s(new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer[2]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2), $ceylon$language.$ceylonInteger(3)])));
  $ceylon$language.print(f1.s(new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)])));
  $ceylon$language.print(f1.s(new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(1)])));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f0.f($ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)));
  $ceylon$language.print(f0.f($ceylon$language.$ceylonInteger(1)));
  $ceylon$language.print(f0.f());
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f0.s($ceylon$language.$ceylonInteger(1), new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(2)])));
  $ceylon$language.print(f0.s($ceylon$language.$ceylonInteger(1), $ceylon$language.empty));
  $ceylon$language.print($ceylon$language.$ceylonString(""));
  $ceylon$language.print(f0.s(new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::Integer]"), [$ceylon$language.$ceylonInteger(1), $ceylon$language.$ceylonInteger(2)])));
  $ceylon$language.print(f0.s(new $ceylon$language.Tuple.$withList(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Integer"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[]"), [$ceylon$language.$ceylonInteger(1)])));
  $ceylon$language.print(f0.s($ceylon$language.empty));
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.language::Boolean"), new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "[ceylon.language::String]"), ($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable(new $ceylon$dart$runtime$model.runtime$TypeDescriptor($module, "ceylon.dart.runtime.model::Module"), [$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}