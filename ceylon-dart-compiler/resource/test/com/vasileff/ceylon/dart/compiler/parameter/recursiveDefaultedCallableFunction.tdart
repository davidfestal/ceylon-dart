import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

void $package$recursiveDefaultedCallableFunction() {
    void testFact([$dart$core.Object fact = $ceylon$language.dart$default]) {
        if ($dart$core.identical(fact, $ceylon$language.dart$default)) {
            fact = new $ceylon$language.dart$Callable(([$ceylon$language.Integer i]) => $ceylon$language.$dartInt(i) < 2 ? i : $ceylon$language.$ceylonInteger($ceylon$language.$dartInt(i) * $ceylon$language.$dartInt((fact as $ceylon$language.Callable).f($ceylon$language.$ceylonInteger($ceylon$language.$dartInt(i) - 1)) as $ceylon$language.Integer)));
        }
        if (!($ceylon$language.$dartInt((fact as $ceylon$language.Callable).f($ceylon$language.$ceylonInteger(4)) as $ceylon$language.Integer) == 24)) {
            throw new $ceylon$language.AssertionError("Violated: fact(4) == 24");
        }
    }

    testFact();
}

void recursiveDefaultedCallableFunction() => $package$recursiveDefaultedCallableFunction();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}