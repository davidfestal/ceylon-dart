import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class staticInvocationOfCallableParam$CP implements $ceylon$language.dart$$Basic {
  staticInvocationOfCallableParam$CP([$dart$core.Object echo = $ceylon$language.dart$default]) : this.$s((() {
    if ($dart$core.identical(echo, $ceylon$language.dart$default)) {
      echo = new $ceylon$language.dart$Callable(([$ceylon$language.String s]) => s);
    }
    return [echo];
  })());
  staticInvocationOfCallableParam$CP.$s([$dart$core.List a]) : this.$w(a[0]);
  staticInvocationOfCallableParam$CP.$w([$ceylon$language.Callable echo]) {
    this._echo = echo;
  }
  $ceylon$language.Callable _echo;
  void test() {
    if (!($ceylon$language.$dartString(((new $ceylon$language.dart$Callable(([$dart$core.Object $r]) => new $ceylon$language.dart$Callable(([$dart$core.Object $0]) => ($r as staticInvocationOfCallableParam$CP)._echo.f($0 as $ceylon$language.String) as $ceylon$language.String))).f(new staticInvocationOfCallableParam$CP()) as $ceylon$language.Callable).f($ceylon$language.$ceylonString("hello")) as $ceylon$language.String) == "hello")) {
      throw new $ceylon$language.AssertionError("Violated: CP.echo(CP())(\"hello\") == \"hello\"");
    }
    if (!($ceylon$language.$dartString(((new $ceylon$language.dart$Callable(([$dart$core.Object $r]) => new $ceylon$language.dart$Callable(([$dart$core.Object $0]) => ($r as staticInvocationOfCallableParam$CP)._echo.f($0 as $ceylon$language.String) as $ceylon$language.String))).f(new staticInvocationOfCallableParam$CP()) as $ceylon$language.Callable).s(new $ceylon$language.Tuple.$withList([$ceylon$language.$ceylonString("hello")])) as $ceylon$language.String) == "hello")) {
      throw new $ceylon$language.AssertionError("Violated: CP.echo(CP())(*[\"hello\"]) == \"hello\"");
    }
  }
}
void $package$staticInvocationOfCallableParam() {
  (new staticInvocationOfCallableParam$CP()).test();
}

void staticInvocationOfCallableParam() => $package$staticInvocationOfCallableParam();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "staticInvocationOfCallableParam" :
    $package$staticInvocationOfCallableParam();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}