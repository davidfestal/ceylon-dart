import "dart:core" as $dart$core;
import "package:ceylon/language/language.dart" as $ceylon$language;

class superAndOuterCallableParam$Outer$Inner  extends superAndOuterCallableParam$Outer {
    superAndOuterCallableParam$Outer $outer$default$superAndOuterCallableParam$Outer;
    superAndOuterCallableParam$Outer$Inner([superAndOuterCallableParam$Outer $outer$default$superAndOuterCallableParam$Outer]) : super(new $ceylon$language.dart$Callable(([$ceylon$language.String s]) => $ceylon$language.String.instance($ceylon$language.String.nativeValue(s) + "_inner"))) {
        this.$outer$default$superAndOuterCallableParam$Outer = $outer$default$superAndOuterCallableParam$Outer;
    }
    $dart$core.String foo() => $ceylon$language.String.nativeValue(super._$f.f($ceylon$language.String.instance("works")) as $ceylon$language.String);
    $dart$core.String bar() => $ceylon$language.String.nativeValue($outer$default$superAndOuterCallableParam$Outer._$f.f($ceylon$language.String.instance("works")) as $ceylon$language.String);
}
class superAndOuterCallableParam$Outer {
    superAndOuterCallableParam$Outer([$dart$core.Object _$f = $ceylon$language.dart$default]) : this.$s((() {
        if ($dart$core.identical(_$f, $ceylon$language.dart$default)) {
            _$f = new $ceylon$language.dart$Callable(([$ceylon$language.String s]) => $ceylon$language.String.instance($ceylon$language.String.nativeValue(s) + "_outer"));
        }
        return [_$f];
    })());
    superAndOuterCallableParam$Outer.$s([$dart$core.List a]) : this.$w(a[0]);
    superAndOuterCallableParam$Outer.$w([$ceylon$language.Callable _$f]) {
        this._$f = _$f;
    }
    $ceylon$language.Callable _$f;
}
void $package$superAndOuterCallableParam() {
    if (!((new superAndOuterCallableParam$Outer$Inner(new superAndOuterCallableParam$Outer())).foo() == "works_inner")) {
        throw new $ceylon$language.AssertionError("Violated: Outer().Inner().foo() == \"works_inner\"");
    }
    if (!((new superAndOuterCallableParam$Outer$Inner(new superAndOuterCallableParam$Outer())).bar() == "works_outer")) {
        throw new $ceylon$language.AssertionError("Violated: Outer().Inner().bar() == \"works_outer\"");
    }
}

void superAndOuterCallableParam() => $package$superAndOuterCallableParam();