import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class C implements $ceylon$language.dart$$Basic {
    C() {}
    $dart$core.String id() => "C";
}
class D  extends C {
    D() {}
    $dart$core.String id() => "D";
    $ceylon$language.Callable get superId => new $ceylon$language.dart$Callable(() => $ceylon$language.$ceylonString(super.id()));
}
void $package$run() {
    $ceylon$language.print((new D()).superId.f());
}

void run() => $package$run();

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"C":const{"mt":"c","nm":"C","super":const{"nm":"Basic","pk":"\$","md":"\$"},"sts":const[]},"D":const{"mt":"c","nm":"D","super":const{"nm":"C","pk":"."},"sts":const[]}}};

var _$module = null;

get $module {
    if (_$module == null) {
        _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel));
        _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
    }
    return _$module;
}