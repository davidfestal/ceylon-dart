import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class C$obj_ implements $ceylon$language.dart$$Basic {
  C$obj_() {}
  $dart$core.String foo() => "foo";
  $dart$core.String get bar => "bar";
}
class C implements $ceylon$language.dart$$Basic {
  void _$init$C([$dart$core.int $bitmap]) {
    if (0 != ($bitmap & 1)) {}
  }
  C() : this.$d(1);
  C.$d([$dart$core.int $bitmap]) {
    _$init$C($bitmap | 1);
  }
  static final C$obj_ obj = new C$obj_();
}
void $package$run() {
  C$obj_ obj = C.obj;
  if (!(obj.foo() == "foo")) {
    throw new $ceylon$language.AssertionError("Violated: obj.foo() == \"foo\"");
  }
  if (!(C.obj.bar == "bar")) {
    throw new $ceylon$language.AssertionError("Violated: C.obj.bar == \"bar\"");
  }
  $ceylon$language.Callable f = (() {
    C$obj_ $r = C.obj;
    return new $ceylon$language.dart$Callable(() => $ceylon$language.$ceylonString($r.foo()));
  })();
  if (!($ceylon$language.$dartString(f.f() as $ceylon$language.String) == "foo")) {
    throw new $ceylon$language.AssertionError("Violated: f() == \"foo\"");
  }
  $ceylon$language.print($ceylon$language.$ceylonString("done"));
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{"C":const{"mt":"c","nm":"C","super":const{"nm":"Basic","pk":"\$","md":"\$"},"\$c":const{"obj":const{"mt":"c","nm":"obj","super":const{"nm":"Basic","pk":"\$","md":"\$"}}}}}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}