import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

void $package$run() {
  $dart$core.String f([$ceylon$language.Sequential strings]) => (() {
    $ceylon$language.Sequential switch$0 = strings;
    if (switch$0 is $ceylon$language.Empty) {
      return "empty";
    } else if ((switch$0 is $ceylon$language.Tuple) && (switch$0 == (new $ceylon$language.Tuple.$withList([$ceylon$language.$ceylonString("a"), $ceylon$language.$ceylonString("b")])))) {
      return "ab";
    } else if ((switch$0 is $ceylon$language.Tuple) && (switch$0 == (new $ceylon$language.Tuple.$withList([$ceylon$language.$ceylonString("b"), $ceylon$language.$ceylonString("c")])))) {
      return "bc";
    } else {
      return "other";
    }
  })();

  if (!(f($ceylon$language.empty) == "empty")) {
    throw new $ceylon$language.AssertionError("Violated: f([]) == \"empty\"");
  }
  if (!(f(new $ceylon$language.Tuple.$withList([$ceylon$language.$ceylonString("a"), $ceylon$language.$ceylonString("b")])) == "ab")) {
    throw new $ceylon$language.AssertionError("Violated: f([\"a\", \"b\"]) == \"ab\"");
  }
  if (!(f(new $ceylon$language.Tuple.$withList([$ceylon$language.$ceylonString("b"), $ceylon$language.$ceylonString("c")])) == "bc")) {
    throw new $ceylon$language.AssertionError("Violated: f([\"b\", \"c\"]) == \"bc\"");
  }
  if (!(f(new $ceylon$language.Tuple.$withList([$ceylon$language.$ceylonString("c"), $ceylon$language.$ceylonString("d")])) == "other")) {
    throw new $ceylon$language.AssertionError("Violated: f([\"c\", \"d\"]) == \"other\"");
  }
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
  if (_$module == null) {
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}