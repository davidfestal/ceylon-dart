import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

void $package$run() {
  $dart$core.Object si = $ceylon$language.$ceylonString("");
  {
    $dart$core.Object newVar = si;
    if (newVar is $ceylon$language.String) {
      $dart$core.String newVar$0;
      newVar$0 = $ceylon$language.$dartString(newVar as $ceylon$language.String);
      $ceylon$language.print($ceylon$language.$ceylonString("string"));
      $ceylon$language.print($ceylon$language.$ceylonInteger($ceylon$language.$ceylonString(newVar$0).size));
    } else if (newVar is $ceylon$language.Integer) {
      $dart$core.int newVar$1;
      newVar$1 = $ceylon$language.$dartInt(newVar as $ceylon$language.Integer);
      $ceylon$language.print($ceylon$language.$ceylonString("integer"));
    } else {
      throw new $ceylon$language.AssertionError("Supposedly exhaustive switch was not exhaustive");
    }
  }
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
  if (_$module == null) {
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}