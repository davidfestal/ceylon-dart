import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

class tryDestroyable$DResource implements $ceylon$language.dart$$Basic, $ceylon$language.Destroyable {
  tryDestroyable$DResource() {}
  void destroy([$ceylon$language.Throwable error]) {}
}
void $package$tryDestroyable() {
  try {
    tryDestroyable$DResource d1 = new tryDestroyable$DResource();
    $ceylon$language.Throwable e$6;
    try {
      tryDestroyable$DResource u$2 = new tryDestroyable$DResource();
      $ceylon$language.Throwable e$3;
      try {
        $ceylon$language.print($ceylon$language.$ceylonString("trying"));
      } catch (e$4) {
        e$3 = $ceylon$language.dart$wrapThrownObject(e$4);
        rethrow;
      } finally {
        if (e$3 != null) {
          try {
            u$2.destroy(e$3);
          } on $ceylon$language.Throwable catch (e$5) {
            e$3.addSuppressed(e$5);
          }
        } else {
          u$2.destroy(e$3);
        }
      }
    } catch (e$7) {
      e$6 = $ceylon$language.dart$wrapThrownObject(e$7);
      rethrow;
    } finally {
      if (e$6 != null) {
        try {
          d1.destroy(e$6);
        } on $ceylon$language.Throwable catch (e$8) {
          e$6.addSuppressed(e$8);
        }
      } else {
        d1.destroy(e$6);
      }
    }
  } catch (e$0) {
    $ceylon$language.Throwable e$1 = $ceylon$language.dart$wrapThrownObject(e$0);
    if (e$1 is $ceylon$language.Throwable) {
      $ceylon$language.Throwable e = e$1;
      $ceylon$language.print($ceylon$language.$ceylonString("caught something"));
      throw e;
    } else {
      rethrow;
    }
  } finally {
    $ceylon$language.print($ceylon$language.$ceylonString("finally do some cleanup."));
  }
}

void tryDestroyable() => $package$tryDestroyable();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "tryDestroyable" :
    $package$tryDestroyable();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

var _$moduleInitializing = false;

get $module {
  if ((_$module == null) && (!_$moduleInitializing)) {
    _$moduleInitializing = true;
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$moduleInitializing = false;
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}