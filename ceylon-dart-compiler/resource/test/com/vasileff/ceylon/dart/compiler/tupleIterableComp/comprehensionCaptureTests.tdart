import "dart:core" as $dart$core;
import "package:ceylon/interop/dart/dart.dart" as $ceylon$interop$dart;
import "package:ceylon/dart/runtime/model/model.dart" as $ceylon$dart$runtime$model;
import "package:ceylon/language/language.dart" as $ceylon$language;

void $package$run() {
  $ceylon$language.print($ceylon$language.$ceylonString("* comprehensionCaptureTest begin"));
  $ceylon$language.Tuple values = new $ceylon$language.Tuple.$withList([$ceylon$language.$ceylonInteger(100), $ceylon$language.$ceylonInteger(110), $ceylon$language.$ceylonInteger(120)]);
  $ceylon$language.Tuple valuesNull = new $ceylon$language.Tuple.$withList([$ceylon$language.$ceylonInteger(100), $ceylon$language.$ceylonInteger(110), $ceylon$language.$ceylonInteger(120), null]);
  $ceylon$language.Iterable funcs0 = $ceylon$language.dart$functionIterable(new $ceylon$language.dart$Callable(() {
    $dart$core.bool step$0$expired$0 = false;
    $dart$core.bool step$0$1() {
      if (step$0$expired$0) {
        return false;
      }
      step$0$expired$0 = true;
      return true;
    }

    $ceylon$language.Iterator iterator_1$2;
    $dart$core.bool step$1$Init$5() {
      if (iterator_1$2 != null) {
        return true;
      }
      if (!step$0$1()) {
        return false;
      }
      iterator_1$2 = values.iterator();
      return true;
    }

    $ceylon$language.Integer v$4;
    $dart$core.bool step$1$6() {
      while (step$1$Init$5()) {
        $dart$core.Object next$3;
        if ((next$3 = iterator_1$2.next()) is !$ceylon$language.Finished) {
          $ceylon$language.Integer v;
          {
            v = next$3 as $ceylon$language.Integer;
          }
          v$4 = v;
          return true;
        }
        iterator_1$2 = null;
      }
      return false;
    }

    $dart$core.Object step$2$7() {
      if (!step$1$6()) {
        return $ceylon$language.finished;
      }
      $ceylon$language.Integer v = v$4;
      return new $ceylon$language.dart$Callable(() => v);
    }

    return new $ceylon$language.dart$Callable(step$2$7);
  }));
  if (!(($ceylon$language.dart$functionIterable(new $ceylon$language.dart$Callable(() {
    $dart$core.bool step$0$expired$8 = false;
    $dart$core.bool step$0$9() {
      if (step$0$expired$8) {
        return false;
      }
      step$0$expired$8 = true;
      return true;
    }

    $ceylon$language.Iterator iterator_1$10;
    $dart$core.bool step$1$Init$13() {
      if (iterator_1$10 != null) {
        return true;
      }
      if (!step$0$9()) {
        return false;
      }
      iterator_1$10 = (funcs0.sequence() as $ceylon$language.Iterable).iterator();
      return true;
    }

    $ceylon$language.Callable f$12;
    $dart$core.bool step$1$14() {
      while (step$1$Init$13()) {
        $dart$core.Object next$11;
        if ((next$11 = iterator_1$10.next()) is !$ceylon$language.Finished) {
          $ceylon$language.Callable f;
          {
            f = next$11 as $ceylon$language.Callable;
          }
          f$12 = f;
          return true;
        }
        iterator_1$10 = null;
      }
      return false;
    }

    $dart$core.Object step$2$15() {
      if (!step$1$14()) {
        return $ceylon$language.finished;
      }
      $ceylon$language.Callable f = f$12;
      return f.f();
    }

    return new $ceylon$language.dart$Callable(step$2$15);
  })).sequence() as $ceylon$language.List) == values)) {
    throw new $ceylon$language.AssertionError("Violated: { for (f in funcs0.sequence()) f() }.sequence().equals(values)");
  }
  $ceylon$language.Iterable funcs1 = $ceylon$language.dart$functionIterable(new $ceylon$language.dart$Callable(() {
    $dart$core.bool step$0$expired$16 = false;
    $dart$core.bool step$0$17() {
      if (step$0$expired$16) {
        return false;
      }
      step$0$expired$16 = true;
      return true;
    }

    $ceylon$language.Iterator iterator_1$18;
    $dart$core.bool step$1$Init$21() {
      if (iterator_1$18 != null) {
        return true;
      }
      if (!step$0$17()) {
        return false;
      }
      iterator_1$18 = valuesNull.iterator();
      return true;
    }

    $ceylon$language.Integer v$20;
    $dart$core.bool step$1$22() {
      while (step$1$Init$21()) {
        $dart$core.Object next$19;
        if ((next$19 = iterator_1$18.next()) is !$ceylon$language.Finished) {
          $ceylon$language.Integer v;
          {
            v = next$19 as $ceylon$language.Integer;
          }
          v$20 = v;
          return true;
        }
        iterator_1$18 = null;
      }
      return false;
    }

    $dart$core.int w$25;
    $dart$core.bool step$2$23() {
      while (step$1$22()) {
        $ceylon$language.Integer v = v$20;
        $dart$core.int w;
        $dart$core.int tmp$24 = $ceylon$language.$dartInt(v);
        if (!(!(null == tmp$24))) {
          continue;
        }
        w = tmp$24;
        w$25 = w;
        return true;
      }
      return false;
    }

    $dart$core.Object step$3$26() {
      if (!step$2$23()) {
        return $ceylon$language.finished;
      }
      $ceylon$language.Integer v = v$20;
      $dart$core.int w = w$25;
      return new $ceylon$language.dart$Callable(() => $ceylon$language.$ceylonInteger(w));
    }

    return new $ceylon$language.dart$Callable(step$3$26);
  }));
  if (!(($ceylon$language.dart$functionIterable(new $ceylon$language.dart$Callable(() {
    $dart$core.bool step$0$expired$27 = false;
    $dart$core.bool step$0$28() {
      if (step$0$expired$27) {
        return false;
      }
      step$0$expired$27 = true;
      return true;
    }

    $ceylon$language.Iterator iterator_1$29;
    $dart$core.bool step$1$Init$32() {
      if (iterator_1$29 != null) {
        return true;
      }
      if (!step$0$28()) {
        return false;
      }
      iterator_1$29 = (funcs1.sequence() as $ceylon$language.List).iterator();
      return true;
    }

    $ceylon$language.Callable f$31;
    $dart$core.bool step$1$33() {
      while (step$1$Init$32()) {
        $dart$core.Object next$30;
        if ((next$30 = iterator_1$29.next()) is !$ceylon$language.Finished) {
          $ceylon$language.Callable f;
          {
            f = next$30 as $ceylon$language.Callable;
          }
          f$31 = f;
          return true;
        }
        iterator_1$29 = null;
      }
      return false;
    }

    $dart$core.Object step$2$34() {
      if (!step$1$33()) {
        return $ceylon$language.finished;
      }
      $ceylon$language.Callable f = f$31;
      return f.f();
    }

    return new $ceylon$language.dart$Callable(step$2$34);
  })).sequence() as $ceylon$language.List) == values)) {
    throw new $ceylon$language.AssertionError("Violated: { for (f in funcs1.sequence()) f() }.sequence().equals(values)");
  }
  $ceylon$language.Iterable funcs2 = $ceylon$language.dart$functionIterable(new $ceylon$language.dart$Callable(() {
    $dart$core.bool step$0$expired$35 = false;
    $dart$core.bool step$0$36() {
      if (step$0$expired$35) {
        return false;
      }
      step$0$expired$35 = true;
      return true;
    }

    $ceylon$language.Iterator iterator_1$37;
    $dart$core.bool step$1$Init$40() {
      if (iterator_1$37 != null) {
        return true;
      }
      if (!step$0$36()) {
        return false;
      }
      iterator_1$37 = values.iterator();
      return true;
    }

    $ceylon$language.Integer v$39;
    $dart$core.bool step$1$41() {
      while (step$1$Init$40()) {
        $dart$core.Object next$38;
        if ((next$38 = iterator_1$37.next()) is !$ceylon$language.Finished) {
          $ceylon$language.Integer v;
          {
            v = next$38 as $ceylon$language.Integer;
          }
          v$39 = v;
          return true;
        }
        iterator_1$37 = null;
      }
      return false;
    }

    $ceylon$language.Callable w$44;
    $dart$core.bool step$2$42() {
      while (step$1$41()) {
        $ceylon$language.Integer v = v$39;
        $ceylon$language.Callable w;
        $ceylon$language.Callable tmp$43 = true ? new $ceylon$language.dart$Callable(() => v) : null;
        if (!(!(null == tmp$43))) {
          continue;
        }
        w = tmp$43;
        w$44 = w;
        return true;
      }
      return false;
    }

    $dart$core.Object step$3$45() {
      if (!step$2$42()) {
        return $ceylon$language.finished;
      }
      $ceylon$language.Integer v = v$39;
      $ceylon$language.Callable w = w$44;
      return w;
    }

    return new $ceylon$language.dart$Callable(step$3$45);
  }));
  if (!(($ceylon$language.dart$functionIterable(new $ceylon$language.dart$Callable(() {
    $dart$core.bool step$0$expired$46 = false;
    $dart$core.bool step$0$47() {
      if (step$0$expired$46) {
        return false;
      }
      step$0$expired$46 = true;
      return true;
    }

    $ceylon$language.Iterator iterator_1$48;
    $dart$core.bool step$1$Init$51() {
      if (iterator_1$48 != null) {
        return true;
      }
      if (!step$0$47()) {
        return false;
      }
      iterator_1$48 = (funcs2.sequence() as $ceylon$language.List).iterator();
      return true;
    }

    $ceylon$language.Callable f$50;
    $dart$core.bool step$1$52() {
      while (step$1$Init$51()) {
        $dart$core.Object next$49;
        if ((next$49 = iterator_1$48.next()) is !$ceylon$language.Finished) {
          $ceylon$language.Callable f;
          {
            f = next$49 as $ceylon$language.Callable;
          }
          f$50 = f;
          return true;
        }
        iterator_1$48 = null;
      }
      return false;
    }

    $dart$core.Object step$2$53() {
      if (!step$1$52()) {
        return $ceylon$language.finished;
      }
      $ceylon$language.Callable f = f$50;
      return f.f();
    }

    return new $ceylon$language.dart$Callable(step$2$53);
  })).sequence() as $ceylon$language.List) == values)) {
    throw new $ceylon$language.AssertionError("Violated: { for (f in funcs2.sequence()) f() }.sequence().equals(values)");
  }
  $ceylon$language.Iterable funcs3 = $ceylon$language.dart$functionIterable(new $ceylon$language.dart$Callable(() {
    $dart$core.bool step$0$expired$54 = false;
    $dart$core.bool step$0$55() {
      if (step$0$expired$54) {
        return false;
      }
      step$0$expired$54 = true;
      return true;
    }

    $ceylon$language.Iterator iterator_1$56;
    $dart$core.bool step$1$Init$59() {
      if (iterator_1$56 != null) {
        return true;
      }
      if (!step$0$55()) {
        return false;
      }
      iterator_1$56 = values.iterator();
      return true;
    }

    $ceylon$language.Integer v$58;
    $dart$core.bool step$1$60() {
      while (step$1$Init$59()) {
        $dart$core.Object next$57;
        if ((next$57 = iterator_1$56.next()) is !$ceylon$language.Finished) {
          $ceylon$language.Integer v;
          {
            v = next$57 as $ceylon$language.Integer;
          }
          v$58 = v;
          return true;
        }
        iterator_1$56 = null;
      }
      return false;
    }

    $ceylon$language.Iterator iterator_2$61;
    $dart$core.bool step$2$Init$64() {
      if (iterator_2$61 != null) {
        return true;
      }
      if (!step$1$60()) {
        return false;
      }
      $ceylon$language.Integer v = v$58;
      iterator_2$61 = (new $ceylon$language.LazyIterable(1, (final $dart$core.int $i$) {
        switch ($i$) {
        case 0 :
          return new $ceylon$language.dart$Callable(() => v);
        }
      }, null)).iterator();
      return true;
    }

    $ceylon$language.Callable w$63;
    $dart$core.bool step$2$65() {
      while (step$2$Init$64()) {
        $ceylon$language.Integer v = v$58;
        $dart$core.Object next$62;
        if ((next$62 = iterator_2$61.next()) is !$ceylon$language.Finished) {
          $ceylon$language.Callable w;
          {
            w = next$62 as $ceylon$language.Callable;
          }
          w$63 = w;
          return true;
        }
        iterator_2$61 = null;
      }
      return false;
    }

    $dart$core.Object step$3$66() {
      if (!step$2$65()) {
        return $ceylon$language.finished;
      }
      $ceylon$language.Integer v = v$58;
      $ceylon$language.Callable w = w$63;
      return w;
    }

    return new $ceylon$language.dart$Callable(step$3$66);
  }));
  if (!(($ceylon$language.dart$functionIterable(new $ceylon$language.dart$Callable(() {
    $dart$core.bool step$0$expired$67 = false;
    $dart$core.bool step$0$68() {
      if (step$0$expired$67) {
        return false;
      }
      step$0$expired$67 = true;
      return true;
    }

    $ceylon$language.Iterator iterator_1$69;
    $dart$core.bool step$1$Init$72() {
      if (iterator_1$69 != null) {
        return true;
      }
      if (!step$0$68()) {
        return false;
      }
      iterator_1$69 = (funcs3.sequence() as $ceylon$language.Iterable).iterator();
      return true;
    }

    $ceylon$language.Callable f$71;
    $dart$core.bool step$1$73() {
      while (step$1$Init$72()) {
        $dart$core.Object next$70;
        if ((next$70 = iterator_1$69.next()) is !$ceylon$language.Finished) {
          $ceylon$language.Callable f;
          {
            f = next$70 as $ceylon$language.Callable;
          }
          f$71 = f;
          return true;
        }
        iterator_1$69 = null;
      }
      return false;
    }

    $dart$core.Object step$2$74() {
      if (!step$1$73()) {
        return $ceylon$language.finished;
      }
      $ceylon$language.Callable f = f$71;
      return f.f();
    }

    return new $ceylon$language.dart$Callable(step$2$74);
  })).sequence() as $ceylon$language.List) == values)) {
    throw new $ceylon$language.AssertionError("Violated: { for (f in funcs3.sequence()) f() }.sequence().equals(values)");
  }
  $ceylon$language.print($ceylon$language.$ceylonString("* comprehensionCaptureTest end"));
}

void run() => $package$run();

$ceylon$language.dart$Callable _$runToplevel = new $ceylon$language.dart$Callable(($ceylon$language.String toplevel) {
  switch (toplevel.toString()) {
  case "run" :
    $package$run();
    return $ceylon$language.$true;
  }
  return $ceylon$language.$false;
});

const _$jsonModel = const{"\$mod-name":"default","\$mod-version":"unversioned","":const{}};

var _$module = null;

get $module {
  if (_$module == null) {
    _$module = new $ceylon$dart$runtime$model.json$LazyJsonModule(new $ceylon$interop$dart.JsonObject(_$jsonModel), _$runToplevel);
    _$module.initializeImports((new $ceylon$interop$dart.CeylonIterable([$ceylon$language.$module])).sequence());
  }
  return _$module;
}

void main($dart$core.List arguments) {
  $ceylon$language.$run(arguments, $module);
}